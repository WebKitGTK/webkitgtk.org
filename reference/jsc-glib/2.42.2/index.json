{"meta":{"ns":"JavaScriptCore","version":"4.1","generator":"gi-docgen","generator-version":"2023.1"},"symbols":[{"type":"bitfield","name":"ValuePropertyFlags","ctype":"JSCValuePropertyFlags","summary":"Flags used when defining properties with jsc_value_object_define_property_data() and jsc_value_object_define_property_accessor()."},{"type":"callback","name":"ClassDeletePropertyFunction","ctype":"JSCClassDeletePropertyFunction","summary":"The type of delete_property in #JSCClassVTable. This is only ..."},{"type":"callback","name":"ClassEnumeratePropertiesFunction","ctype":"JSCClassEnumeratePropertiesFunction","summary":"The type of enumerate_properties in #JSCClassVTable. This is only ..."},{"type":"callback","name":"ClassGetPropertyFunction","ctype":"JSCClassGetPropertyFunction","summary":"The type of get_property in #JSCClassVTable. This is only ..."},{"type":"callback","name":"ClassHasPropertyFunction","ctype":"JSCClassHasPropertyFunction","summary":"The type of has_property in #JSCClassVTable. This is only ..."},{"type":"callback","name":"ClassSetPropertyFunction","ctype":"JSCClassSetPropertyFunction","summary":"The type of set_property in #JSCClassVTable. This is only ..."},{"type":"callback","name":"ExceptionHandler","ctype":"JSCExceptionHandler","summary":"Function used to handle JavaScript exceptions in a #JSCContext."},{"type":"callback","name":"OptionsFunc","ctype":"JSCOptionsFunc","summary":"Function used to iterate options.  Not that @description ..."},{"type":"class","name":"Class","ctype":"JSCClass","summary":"A JSSClass represents a custom JavaScript class registered by ..."},{"type":"class","name":"Context","ctype":"JSCContext","summary":"JSCContext represents a JavaScript execution context, where all operations ..."},{"type":"class","name":"Exception","ctype":"JSCException","summary":"JSCException represents a JavaScript exception."},{"type":"class","name":"Value","ctype":"JSCValue","summary":"JSCValue represents a reference to a value in a ..."},{"type":"class","name":"VirtualMachine","ctype":"JSCVirtualMachine","summary":"JSCVirtualMachine represents a group of JSCContexts. It allows concurrent ..."},{"type":"class","name":"WeakValue","ctype":"JSCWeakValue","summary":"JSCWeakValue represents a weak reference to a value in ..."},{"type":"constant","name":"MAJOR_VERSION","ident":"JSC_MAJOR_VERSION","summary":"Like jsc_get_major_version(), but from the headers used at application ..."},{"type":"constant","name":"MICRO_VERSION","ident":"JSC_MICRO_VERSION","summary":"Like jsc_get_micro_version(), but from the headers used at application ..."},{"type":"constant","name":"MINOR_VERSION","ident":"JSC_MINOR_VERSION","summary":"Like jsc_get_minor_version(), but from the headers used at application ..."},{"type":"constant","name":"OPTIONS_USE_DFG","ident":"JSC_OPTIONS_USE_DFG","summary":"Allows the DFG JIT to be used if %TRUE. ..."},{"type":"constant","name":"OPTIONS_USE_FTL","ident":"JSC_OPTIONS_USE_FTL","summary":"Allows the FTL JIT to be used if %TRUE. ..."},{"type":"constant","name":"OPTIONS_USE_JIT","ident":"JSC_OPTIONS_USE_JIT","summary":"Allows the executable pages to be allocated for JIT ..."},{"type":"constant","name":"OPTIONS_USE_LLINT","ident":"JSC_OPTIONS_USE_LLINT","summary":"Allows the LLINT to be used if %TRUE. Option ..."},{"type":"ctor","name":"new","type_name":"Context","ident":"jsc_context_new","summary":"Create a new #JSCContext. The context is created in ..."},{"type":"ctor","name":"new","type_name":"Exception","ident":"jsc_exception_new","summary":"Create a new #JSCException in @context with @message."},{"type":"ctor","name":"new","type_name":"VirtualMachine","ident":"jsc_virtual_machine_new","summary":"Create a new #JSCVirtualMachine."},{"type":"ctor","name":"new","type_name":"WeakValue","ident":"jsc_weak_value_new","summary":"Create a new #JSCWeakValue for the JavaScript value referenced ..."},{"type":"ctor","name":"new_array","type_name":"Value","ident":"jsc_value_new_array","summary":"Create a new #JSCValue referencing an array with the ..."},{"type":"ctor","name":"new_array_buffer","type_name":"Value","ident":"jsc_value_new_array_buffer","summary":"Creates a new %ArrayBuffer from existing @data in memory. ..."},{"type":"ctor","name":"new_array_from_garray","type_name":"Value","ident":"jsc_value_new_array_from_garray","summary":"Create a new #JSCValue referencing an array with the ..."},{"type":"ctor","name":"new_array_from_strv","type_name":"Value","ident":"jsc_value_new_array_from_strv","summary":"Create a new #JSCValue referencing an array of strings ..."},{"type":"ctor","name":"new_boolean","type_name":"Value","ident":"jsc_value_new_boolean","summary":"Create a new #JSCValue from @value"},{"type":"ctor","name":"new_from_json","type_name":"Value","ident":"jsc_value_new_from_json","summary":"Create a new #JSCValue referencing a new value created ..."},{"type":"ctor","name":"new_function","type_name":"Value","ident":"jsc_value_new_function","summary":"Create a function in @context. If @name is %NULL ..."},{"type":"ctor","name":"new_function_variadic","type_name":"Value","ident":"jsc_value_new_function_variadic","summary":"Create a function in @context. If @name is %NULL ..."},{"type":"ctor","name":"new_functionv","type_name":"Value","ident":"jsc_value_new_functionv","summary":"Create a function in @context. If @name is %NULL ..."},{"type":"ctor","name":"new_null","type_name":"Value","ident":"jsc_value_new_null","summary":"Create a new #JSCValue referencing null in @context."},{"type":"ctor","name":"new_number","type_name":"Value","ident":"jsc_value_new_number","summary":"Create a new #JSCValue from @number."},{"type":"ctor","name":"new_object","type_name":"Value","ident":"jsc_value_new_object","summary":"Create a new #JSCValue from @instance. If @instance is ..."},{"type":"ctor","name":"new_printf","type_name":"Exception","ident":"jsc_exception_new_printf","summary":"Create a new #JSCException in @context using a formatted ..."},{"type":"ctor","name":"new_string","type_name":"Value","ident":"jsc_value_new_string","summary":"Create a new #JSCValue from @string. If you need ..."},{"type":"ctor","name":"new_string_from_bytes","type_name":"Value","ident":"jsc_value_new_string_from_bytes","summary":"Create a new #JSCValue from @bytes."},{"type":"ctor","name":"new_typed_array","type_name":"Value","ident":"jsc_value_new_typed_array","summary":"Create a new typed array containing a given amount ..."},{"type":"ctor","name":"new_undefined","type_name":"Value","ident":"jsc_value_new_undefined","summary":"Create a new #JSCValue referencing undefined in @context."},{"type":"ctor","name":"new_vprintf","type_name":"Exception","ident":"jsc_exception_new_vprintf","summary":"Create a new #JSCException in @context using a formatted ..."},{"type":"ctor","name":"new_with_name","type_name":"Exception","ident":"jsc_exception_new_with_name","summary":"Create a new #JSCException in @context with @name and @message."},{"type":"ctor","name":"new_with_name_printf","type_name":"Exception","ident":"jsc_exception_new_with_name_printf","summary":"Create a new #JSCException in @context with @name and ..."},{"type":"ctor","name":"new_with_name_vprintf","type_name":"Exception","ident":"jsc_exception_new_with_name_vprintf","summary":"Create a new #JSCException in @context with @name and ..."},{"type":"ctor","name":"new_with_virtual_machine","type_name":"Context","ident":"jsc_context_new_with_virtual_machine","summary":"Create a new #JSCContext in @virtual_machine."},{"type":"enum","name":"CheckSyntaxMode","ctype":"JSCCheckSyntaxMode","summary":"Enum values to specify a mode to check for ..."},{"type":"enum","name":"CheckSyntaxResult","ctype":"JSCCheckSyntaxResult","summary":"Enum values to specify the result of jsc_context_check_syntax()."},{"type":"enum","name":"OptionType","ctype":"JSCOptionType","summary":"Enum values for options types."},{"type":"enum","name":"TypedArrayType","ctype":"JSCTypedArrayType","summary":"Possible types of the elements contained in a typed array."},{"type":"function","name":"get_major_version","ident":"jsc_get_major_version","summary":"Returns the major version number of the JavaScriptCore library. ..."},{"type":"function","name":"get_micro_version","ident":"jsc_get_micro_version","summary":"Returns the micro version number of the JavaScriptCore library. ..."},{"type":"function","name":"get_minor_version","ident":"jsc_get_minor_version","summary":"Returns the minor version number of the JavaScriptCore library. ..."},{"type":"function","name":"options_foreach","ident":"jsc_options_foreach","summary":"Iterates all available options calling @function for each one. ..."},{"type":"function","name":"options_get_boolean","ident":"jsc_options_get_boolean","summary":"Get @option as a #gboolean value."},{"type":"function","name":"options_get_double","ident":"jsc_options_get_double","summary":"Get @option as a #gdouble value."},{"type":"function","name":"options_get_int","ident":"jsc_options_get_int","summary":"Get @option as a #gint value."},{"type":"function","name":"options_get_option_group","ident":"jsc_options_get_option_group","summary":"Create a #GOptionGroup to handle JSCOptions as command line ..."},{"type":"function","name":"options_get_range_string","ident":"jsc_options_get_range_string","summary":"Get @option as a range string. The string must ..."},{"type":"function","name":"options_get_size","ident":"jsc_options_get_size","summary":"Get @option as a #gsize value."},{"type":"function","name":"options_get_string","ident":"jsc_options_get_string","summary":"Get @option as a string."},{"type":"function","name":"options_get_uint","ident":"jsc_options_get_uint","summary":"Get @option as a #guint value."},{"type":"function","name":"options_set_boolean","ident":"jsc_options_set_boolean","summary":"Set @option as a #gboolean value."},{"type":"function","name":"options_set_double","ident":"jsc_options_set_double","summary":"Set @option as a #gdouble value."},{"type":"function","name":"options_set_int","ident":"jsc_options_set_int","summary":"Set @option as a #gint value."},{"type":"function","name":"options_set_range_string","ident":"jsc_options_set_range_string","summary":"Set @option as a range string. The string must ..."},{"type":"function","name":"options_set_size","ident":"jsc_options_set_size","summary":"Set @option as a #gsize value."},{"type":"function","name":"options_set_string","ident":"jsc_options_set_string","summary":"Set @option as a string."},{"type":"function","name":"options_set_uint","ident":"jsc_options_set_uint","summary":"Set @option as a #guint value."},{"type":"function_macro","name":"CHECK_VERSION","ident":"JSC_CHECK_VERSION","summary":"Check the version of JSC header files at compile time."},{"type":"function_macro","name":"DECLARE_FINAL_TYPE","ident":"JSC_DECLARE_FINAL_TYPE","summary":"No description available."},{"type":"method","name":"add_constructor","type_name":"Class","ident":"jsc_class_add_constructor","summary":"Add a constructor to @jsc_class. If @name is %NULL, ..."},{"type":"method","name":"add_constructor_variadic","type_name":"Class","ident":"jsc_class_add_constructor_variadic","summary":"Add a constructor to @jsc_class. If @name is %NULL, ..."},{"type":"method","name":"add_constructorv","type_name":"Class","ident":"jsc_class_add_constructorv","summary":"Add a constructor to @jsc_class. If @name is %NULL, ..."},{"type":"method","name":"add_method","type_name":"Class","ident":"jsc_class_add_method","summary":"Add method with @name to @jsc_class. When the method ..."},{"type":"method","name":"add_method_variadic","type_name":"Class","ident":"jsc_class_add_method_variadic","summary":"Add method with @name to @jsc_class. When the method ..."},{"type":"method","name":"add_methodv","type_name":"Class","ident":"jsc_class_add_methodv","summary":"Add method with @name to @jsc_class. When the method ..."},{"type":"method","name":"add_property","type_name":"Class","ident":"jsc_class_add_property","summary":"Add a property with @name to @jsc_class. When the ..."},{"type":"method","name":"array_buffer_get_data","type_name":"Value","ident":"jsc_value_array_buffer_get_data","summary":"Gets a pointer to memory that contains the array ..."},{"type":"method","name":"array_buffer_get_size","type_name":"Value","ident":"jsc_value_array_buffer_get_size","summary":"Gets the size in bytes of the array buffer. ..."},{"type":"method","name":"check_syntax","type_name":"Context","ident":"jsc_context_check_syntax","summary":"Check the given @code in @context for syntax errors. ..."},{"type":"method","name":"clear_exception","type_name":"Context","ident":"jsc_context_clear_exception","summary":"Clear the uncaught exception in @context if any."},{"type":"method","name":"constructor_call","type_name":"Value","ident":"jsc_value_constructor_call","summary":"Invoke new with constructor referenced by @value. If @first_parameter_type ..."},{"type":"method","name":"constructor_callv","type_name":"Value","ident":"jsc_value_constructor_callv","summary":"Invoke new with constructor referenced by @value. If @n_parameters ..."},{"type":"method","name":"evaluate","type_name":"Context","ident":"jsc_context_evaluate","summary":"Evaluate @code in @context."},{"type":"method","name":"evaluate_in_object","type_name":"Context","ident":"jsc_context_evaluate_in_object","summary":"Evaluate @code and create an new object where symbols ..."},{"type":"method","name":"evaluate_with_source_uri","type_name":"Context","ident":"jsc_context_evaluate_with_source_uri","summary":"Evaluate @code in @context using @uri as the source ..."},{"type":"method","name":"function_call","type_name":"Value","ident":"jsc_value_function_call","summary":"Call function referenced by @value, passing the given parameters. ..."},{"type":"method","name":"function_callv","type_name":"Value","ident":"jsc_value_function_callv","summary":"Call function referenced by @value, passing the given @parameters. ..."},{"type":"method","name":"get_backtrace_string","type_name":"Exception","ident":"jsc_exception_get_backtrace_string","summary":"Get a string with the exception backtrace."},{"type":"method","name":"get_column_number","type_name":"Exception","ident":"jsc_exception_get_column_number","summary":"Get the column number at which @exception happened."},{"type":"method","name":"get_context","type_name":"Value","ident":"jsc_value_get_context","summary":"Get the #JSCContext in which @value was created."},{"type":"method","name":"get_exception","type_name":"Context","ident":"jsc_context_get_exception","summary":"Get the last unhandled exception thrown in @context by ..."},{"type":"method","name":"get_global_object","type_name":"Context","ident":"jsc_context_get_global_object","summary":"Get a #JSCValue referencing the @context global object"},{"type":"method","name":"get_line_number","type_name":"Exception","ident":"jsc_exception_get_line_number","summary":"Get the line number at which @exception happened."},{"type":"method","name":"get_message","type_name":"Exception","ident":"jsc_exception_get_message","summary":"Get the error message of @exception."},{"type":"method","name":"get_name","type_name":"Class","ident":"jsc_class_get_name","summary":"Get the class name of @jsc_class"},{"type":"method","name":"get_name","type_name":"Exception","ident":"jsc_exception_get_name","summary":"Get the error name of @exception"},{"type":"method","name":"get_parent","type_name":"Class","ident":"jsc_class_get_parent","summary":"Get the parent class of @jsc_class"},{"type":"method","name":"get_source_uri","type_name":"Exception","ident":"jsc_exception_get_source_uri","summary":"Get the source URI of @exception."},{"type":"method","name":"get_value","type_name":"Context","ident":"jsc_context_get_value","summary":"Get a property of @context global object with @name."},{"type":"method","name":"get_value","type_name":"WeakValue","ident":"jsc_weak_value_get_value","summary":"Get a #JSCValue referencing the JavaScript value of @weak_value."},{"type":"method","name":"get_virtual_machine","type_name":"Context","ident":"jsc_context_get_virtual_machine","summary":"Get the #JSCVirtualMachine where @context was created."},{"type":"method","name":"is_array","type_name":"Value","ident":"jsc_value_is_array","summary":"Get whether the value referenced by @value is an array."},{"type":"method","name":"is_array_buffer","type_name":"Value","ident":"jsc_value_is_array_buffer","summary":"Check whether the @value is an %ArrayBuffer."},{"type":"method","name":"is_boolean","type_name":"Value","ident":"jsc_value_is_boolean","summary":"Get whether the value referenced by @value is a boolean."},{"type":"method","name":"is_constructor","type_name":"Value","ident":"jsc_value_is_constructor","summary":"Get whether the value referenced by @value is a constructor."},{"type":"method","name":"is_function","type_name":"Value","ident":"jsc_value_is_function","summary":"Get whether the value referenced by @value is a function"},{"type":"method","name":"is_null","type_name":"Value","ident":"jsc_value_is_null","summary":"Get whether the value referenced by @value is null."},{"type":"method","name":"is_number","type_name":"Value","ident":"jsc_value_is_number","summary":"Get whether the value referenced by @value is a number."},{"type":"method","name":"is_object","type_name":"Value","ident":"jsc_value_is_object","summary":"Get whether the value referenced by @value is an object."},{"type":"method","name":"is_string","type_name":"Value","ident":"jsc_value_is_string","summary":"Get whether the value referenced by @value is a string"},{"type":"method","name":"is_typed_array","type_name":"Value","ident":"jsc_value_is_typed_array","summary":"Determines whether a value is a typed array."},{"type":"method","name":"is_undefined","type_name":"Value","ident":"jsc_value_is_undefined","summary":"Get whether the value referenced by @value is undefined."},{"type":"method","name":"new_typed_array_with_buffer","type_name":"Value","ident":"jsc_value_new_typed_array_with_buffer","summary":"Create a new typed array value with elements from ..."},{"type":"method","name":"object_define_property_accessor","type_name":"Value","ident":"jsc_value_object_define_property_accessor","summary":"Define or modify a property with @property_name in object ..."},{"type":"method","name":"object_define_property_data","type_name":"Value","ident":"jsc_value_object_define_property_data","summary":"Define or modify a property with @property_name in object ..."},{"type":"method","name":"object_delete_property","type_name":"Value","ident":"jsc_value_object_delete_property","summary":"Try to delete property with @name from @value. This ..."},{"type":"method","name":"object_enumerate_properties","type_name":"Value","ident":"jsc_value_object_enumerate_properties","summary":"Get the list of property names of @value. Only ..."},{"type":"method","name":"object_get_property","type_name":"Value","ident":"jsc_value_object_get_property","summary":"Get property with @name from @value."},{"type":"method","name":"object_get_property_at_index","type_name":"Value","ident":"jsc_value_object_get_property_at_index","summary":"Get property at @index from @value."},{"type":"method","name":"object_has_property","type_name":"Value","ident":"jsc_value_object_has_property","summary":"Get whether @value has property with @name."},{"type":"method","name":"object_invoke_method","type_name":"Value","ident":"jsc_value_object_invoke_method","summary":"Invoke method with @name on object referenced by @value, ..."},{"type":"method","name":"object_invoke_methodv","type_name":"Value","ident":"jsc_value_object_invoke_methodv","summary":"Invoke method with @name on object referenced by @value, ..."},{"type":"method","name":"object_is_instance_of","type_name":"Value","ident":"jsc_value_object_is_instance_of","summary":"Get whether the value referenced by @value is an ..."},{"type":"method","name":"object_set_property","type_name":"Value","ident":"jsc_value_object_set_property","summary":"Set @property with @name on @value."},{"type":"method","name":"object_set_property_at_index","type_name":"Value","ident":"jsc_value_object_set_property_at_index","summary":"Set @property at @index on @value."},{"type":"method","name":"pop_exception_handler","type_name":"Context","ident":"jsc_context_pop_exception_handler","summary":"Remove the last #JSCExceptionHandler previously pushed to @context with jsc_context_push_exception_handler()."},{"type":"method","name":"push_exception_handler","type_name":"Context","ident":"jsc_context_push_exception_handler","summary":"Push an exception handler in @context. Whenever a JavaScript ..."},{"type":"method","name":"register_class","type_name":"Context","ident":"jsc_context_register_class","summary":"Register a custom class in @context using the given ..."},{"type":"method","name":"report","type_name":"Exception","ident":"jsc_exception_report","summary":"Return a report message of @exception, containing all the ..."},{"type":"method","name":"set_value","type_name":"Context","ident":"jsc_context_set_value","summary":"Set a property of @context global object with @name ..."},{"type":"method","name":"throw","type_name":"Context","ident":"jsc_context_throw","summary":"Throw an exception to @context using the given error ..."},{"type":"method","name":"throw_exception","type_name":"Context","ident":"jsc_context_throw_exception","summary":"Throw @exception to @context."},{"type":"method","name":"throw_printf","type_name":"Context","ident":"jsc_context_throw_printf","summary":"Throw an exception to @context using the given formatted ..."},{"type":"method","name":"throw_with_name","type_name":"Context","ident":"jsc_context_throw_with_name","summary":"Throw an exception to @context using the given error ..."},{"type":"method","name":"throw_with_name_printf","type_name":"Context","ident":"jsc_context_throw_with_name_printf","summary":"Throw an exception to @context using the given error ..."},{"type":"method","name":"to_boolean","type_name":"Value","ident":"jsc_value_to_boolean","summary":"Convert @value to a boolean."},{"type":"method","name":"to_double","type_name":"Value","ident":"jsc_value_to_double","summary":"Convert @value to a double."},{"type":"method","name":"to_int32","type_name":"Value","ident":"jsc_value_to_int32","summary":"Convert @value to a #gint32."},{"type":"method","name":"to_json","type_name":"Value","ident":"jsc_value_to_json","summary":"Create a JSON string of @value serialization. If @indent ..."},{"type":"method","name":"to_string","type_name":"Exception","ident":"jsc_exception_to_string","summary":"Get the string representation of @exception error."},{"type":"method","name":"to_string","type_name":"Value","ident":"jsc_value_to_string","summary":"Convert @value to a string. Use jsc_value_to_string_as_bytes() instead, if ..."},{"type":"method","name":"to_string_as_bytes","type_name":"Value","ident":"jsc_value_to_string_as_bytes","summary":"Convert @value to a string and return the results ..."},{"type":"method","name":"typed_array_get_buffer","type_name":"Value","ident":"jsc_value_typed_array_get_buffer","summary":"Obtain the %ArrayBuffer for the memory region of the ..."},{"type":"method","name":"typed_array_get_data","type_name":"Value","ident":"jsc_value_typed_array_get_data","summary":"Obtains a pointer to the memory region that holds ..."},{"type":"method","name":"typed_array_get_length","type_name":"Value","ident":"jsc_value_typed_array_get_length","summary":"Gets the number of elements in a typed array."},{"type":"method","name":"typed_array_get_offset","type_name":"Value","ident":"jsc_value_typed_array_get_offset","summary":"Gets the offset over the underlying array buffer data."},{"type":"method","name":"typed_array_get_size","type_name":"Value","ident":"jsc_value_typed_array_get_size","summary":"Gets the size of a typed array."},{"type":"method","name":"typed_array_get_type","type_name":"Value","ident":"jsc_value_typed_array_get_type","summary":"Gets the type of elements contained in a typed array."},{"type":"property","name":"context","type_name":"Class","summary":"The #JSCContext in which the class was registered."},{"type":"property","name":"context","type_name":"Value","summary":"The #JSCContext in which the value was created."},{"type":"property","name":"name","type_name":"Class","summary":"The name of the class."},{"type":"property","name":"parent","type_name":"Class","summary":"The parent class or %NULL in case of final classes."},{"type":"property","name":"value","type_name":"WeakValue","summary":"The #JSCValue referencing the JavaScript value."},{"type":"property","name":"virtual-machine","type_name":"Context","summary":"The #JSCVirtualMachine in which the context was created."},{"type":"record","name":"ClassVTable","ctype":"JSCClassVTable","summary":"Virtual table for a JSCClass. This can be optionally ..."},{"type":"signal","name":"cleared","type_name":"WeakValue","summary":"This signal is emitted when the JavaScript value is destroyed."},{"type":"type_func","name":"get_current","type_name":"Context","ident":"jsc_context_get_current","summary":"Get the #JSCContext that is currently executing a function. ..."}],"terms":{}}